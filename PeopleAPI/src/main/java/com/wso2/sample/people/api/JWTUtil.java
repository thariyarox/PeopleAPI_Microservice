package com.wso2.sample.people.api;

import org.json.JSONException;
import org.json.JSONObject;
import org.apache.commons.codec.binary.Base64;

import java.io.UnsupportedEncodingException;


public class JWTUtil {

    // This is the default claim URI of the username in the JWT generated by WSO2 API Manager
    private static final String userClaimUri = "http://wso2.org/claims/enduser";

    public static final String JWT_HEADER = "X-JWT-Assertion";

    /**
     * This method accepts a JSON Web Token (JWT) and returns the decoded claims section which is a JSON object
     *
     * @param jwt JSON Web Token
     * @return decoded user claims as a JSON object
     */
    public static String decodeAndExtractClaimsFromJWT(String jwt) {

        String claims = "";

       try {
           String[] jwtarray = jwt.split("\\.");
           String base64encodedClaims = jwtarray[1];
           byte[] base64decodedBytes = Base64.decodeBase64(base64encodedClaims);
           claims = new String(base64decodedBytes, "UTF-8");

       } catch(UnsupportedEncodingException e) {
           System.out.println("Error when decoding claims from JWT\n" + e.getMessage());
       }

       return claims;

    }

    /**
     * This method returns the value of a given user claim in a JSON object of user claims
     *
     * @param claimUri The URI of the claim for extracting the value
     * @param claims   The JSON object containing user claims
     * @return value of the given claim as a String
     */
    public static String getClaimValue(String claimUri, String claims) {

        String claimValue = "";

        try {
            JSONObject jsonObj = new JSONObject(claims);
            claimValue = jsonObj.getString(claimUri);

        } catch(JSONException e) {

            System.out.println("Error while extracting the claim value for : " + claimUri + "\n" + e.getMessage());
        }

        return claimValue;

    }

    /**
     * This method accepts a JSON Web Token (JWT) and returns the value of the username claim
     *
     * @param jwt JSON Web Token
     * @return the value of the username claim in the JWT
     */
    public static String getUsernameFromJWT(String jwt) {

        String user = "";

        if (jwt != null && !"".equals(jwt.trim())) {
            String claims = decodeAndExtractClaimsFromJWT(jwt);
            user = getClaimValue(userClaimUri, claims);
        }

        return user;
    }

}
